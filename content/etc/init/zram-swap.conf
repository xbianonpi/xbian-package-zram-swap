# zram-swap startup script
#

description	"Swapping through zram + loop on local fs"

start on (stopped xbian-net or xbian-nowait)
stop on runlevel [06]

env SWAPFILE="/var/swapfile"
env LOOP=''
env RUNTIMECONF="/run/zram-swap.conf"
env RAMSIZE=128
env MOUNTDIR="/media/xbmctoram"
env MNTOPTS="noatime,async,nosuid"
env NOZRAM=no

pre-start script
        swapfile() {
            modprobe -q loop

            if [ -e "$SWAPFILE" ]; then
                attribs=$(lsattr "$SWAPFILE" | awk '{string=substr($0,16,1); print string;}')
                [ "$attribs" = "-" -a "$(findmnt -o FSTYPE -n /)" = "btrfs" ] && rm "$SWAPFILE"
            fi
            if [ ! -e "$SWAPFILE" ]; then
                touch "$SWAPFILE"
                chattr +C "$SWAPFILE" || true
                dd if=/dev/zero of="$SWAPFILE" bs=1M count=$MEM || true
                mkswap "$SWAPFILE" 
            fi
            LOOP=$(losetup -f)
            echo "$LOOP" > "$RUNTIMECONF" || true
            losetup "$LOOP" "$SWAPFILE" 
            swapon -p 0 "$LOOP"
        }

        swappart() {
            rm -fr "$SWAPFILE" || :
            touch "$RUNTIMECONF"
            for swaps in $SWAPPART; do
                test -n "$(swapon -sa | grep $swaps)" || swapon -f -p 0 $swaps
            done
        }

        . /etc/default/zram-swap || true

        if [ "$DPKG" != yes ]; then
            [ "$ZTEMPXBMC" -ne 0 ] || start -q wait-for-state TIMEOUT=100 WAIT_FOR=xbmc-done WAITER=zram-swap WAIT_STATE=started ACT=no || :
        fi

        test -n "$SIZE" && ZRAMSIZE="$SIZE"

        if [ "$ZRAMSIZE" -gt 0 -o "$XBMCTORAM" = yes -o "$ZRUNSHM" -gt 0 -o "$ZTEMPXBMC" -gt 0 ]; then
            modprobe -q zram num_devices=4 || NOZRAM=yes
            echo 1 > /sys/block/zram0/reset || true
        fi

        MEM=$(grep -i memtotal /proc/meminfo | awk '{print $2}')
        MEM=$(( $MEM /1024 /4))
        [ $ZRAMSIZE -gt $MEM ] && ZRAMSIZE=$MEM || true
        MEM=$(($MEM*3))

        if [ "$(cat /sys/block/zram0/disksize)" -eq '0' -a $ZRAMSIZE -gt '0' -a $NOZRAM = no ]; then
            echo "$(($ZRAMSIZE*1024*1024))" > /sys/block/zram0/disksize || true
            mkswap /dev/zram0 > /dev/null
            swapon -p 20 /dev/zram0
        fi

        SWAPPART="$(blkid -t TYPE=swap | grep -v 'zram\|loop'| awk -F':' '{print $1}')"
        if [ -z "$SWAPPART" ]; then
            swapfile
        else
            swappart
        fi

        sRAM=$(( $(cat /proc/meminfo | grep MemTotal | awk '{print $2}') / 1024 )) || true
        if [ "$XBMCTORAM" = "yes" -a "$sRAM" -gt '128' -a $NOZRAM = no ]; then
                test -d "$MOUNTDIR" || mkdir "$MOUNTDIR"
                echo "$((50 *1024*1024))" > /sys/block/zram1/disksize || true
                mke2fs -T floppy -q /dev/zram1
                mount /dev/zram1 "$MOUNTDIR"
                mount -t tmpfs none "$MOUNTDIR"
                cp -dR /usr/local/lib/xbmc/* "$MOUNTDIR" || true
                mount -o bind "$MOUNTDIR" /usr/local/lib/xbmc
                touch "$RUNTIMECONF.ram"
        fi
        test -d "/run/shm" || mkdir "/run/shm"
        if [ "$ZRUNSHM" -gt 0 -a "$sRAM" -gt '128' -a $NOZRAM = no ]; then
                echo "$((ZRUNSHM *1024*1024))" > /sys/block/zram2/disksize || true
                mke2fs -T floppy -m 0 -q /dev/zram2
                mv /run/shm /run/shm.old
                mkdir /run/shm
                mount -t ext2 -o $MNTOPTS /dev/zram2 "/run/shm" && touch /run/shm/.tmpfs
                cp -ar /run/shm.old/. /run/shm || :
                rmdir "/run/shm/lost+found"
                rm -fr /run/shm.old
                touch "$RUNTIMECONF.shm"
                [ -e /dev/shm ] || ln -s /run/shm /dev/shm || :
        fi
        if [ "$ZTEMPXBMC" -gt 0 -a "$sRAM" -gt '128' -a $NOZRAM = no ]; then
                echo "$((ZTEMPXBMC *1024*1024))" > /sys/block/zram3/disksize || true
                mke2fs -T floppy -m 0 -q /dev/zram3
                mv /home/xbian/.xbmc/temp /home/xbian/.xbmc/temp.old
                mkdir /home/xbian/.xbmc/temp
                mount -t ext2 -o $MNTOPTS  /dev/zram3 "/home/xbian/.xbmc/temp"
                chown -Rc xbian:xbian "/home/xbian/.xbmc/temp"
                cp -ar /home/xbian/.xbmc/temp.old/. /home/xbian/.xbmc/temp || :
                rmdir "/home/xbian/.xbmc/temp/lost+found"
                rm -fr /home/xbian/.xbmc/temp.old
                touch "$RUNTIMECONF.xtmp"
        fi

end script

post-stop script
        . /etc/default/zram-swap

        [ ! -e $RUNTIMECONF ] || LOOP=$(cat $RUNTIMECONF)
        for swaps in $(swapon -sa | awk '{print $1}'); do
            [ ! -b $swaps ] || swapoff $swaps
        done

        if [ "$XBMCTORAM" = "yes" -a -e "$RUNTIMECONF.ram" ]; then
                umount -l /usr/local/lib/xbmc
                umount -l "$MOUNTDIR"
                reload xbmc || true
                echo 1 > /sys/block/zram1/reset || true
                rm -fr "$MOUNTDIR"
        fi
        if [ -e "$RUNTIMECONF.xtmp" ]; then
            mkdir /home/xbian/.xbmc/temp.new; chown xbian:xbian /home/xbian/.xbmc/temp.new
            cp -ar /home/xbian/.xbmc/temp/. /home/xbian/.xbmc/temp.new || :
            umount /home/xbian/.xbmc/temp || umount -l /home/xbian/.xbmc/temp || :
            rmdir /home/xbian/.xbmc/temp; mv /home/xbian/.xbmc/temp.new /home/xbian/.xbmc/temp
        fi
        if [ -e "$RUNTIMECONF.shm" ]; then
            mkdir /run/shm.new
            cp -ar /run/shm/. /run/shm.new || :
            umount /run/shm || umount -l /run/shm || :
            rmdir /run/shm; mv /run/shm.new /run/shm
        fi

        for z in $(ls /sys/block/zram?/reset); do echo "1" > $z || true; done; sleep 1

        rmmod zram || true
        if [ -n "$LOOP" ]; then
             losetup -d "$LOOP"
            rmmod loop || true
        fi
        rm "$RUNTIMECONF"

end script
